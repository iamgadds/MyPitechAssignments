CREATE PROC TUEQUES1 (@CATEGORYNAME VARCHAR(20)) AS
BEGIN
	IF EXISTS (SELECT PRODUCTNAME FROM Products WHERE CategoryID IN ( SELECT CATEGORYID FROM Categories WHERE CategoryName = @CATEGORYNAME))
	BEGIN
		SELECT * FROM Products WHERE CategoryID IN ( SELECT CATEGORYID FROM Categories WHERE CategoryName = @CATEGORYNAME)
	END
	ELSE
	BEGIN
		PRINT 'NO RECORD FOUND'
	END
END

EXEC TUEQUES1 'SJBX'
--2.	TAKE COUNTRY NAME AS THE PARAMETER AND RETURN ALL CUSTOMERS FROM THAT COUNTRY

CREATE PROC TUEQUES2 (@COUNTRY VARCHAR(20)) AS
BEGIN
	SELECT ContactName FROM Customers WHERE Country = @COUNTRY
END

EXEC TUEQUES2 'UK'
--3.       WRITE INSERT, UPDATE AND DELETE PROCEDURE FOR EMPLOYEES TABLE. IF ANY STATEMENT FAIL RAISE PROPER ERROR MESSAGE
--PARAMETER : EMPLOYEEID         LASTNAME         FIRSTNAME        TITLE      TITLEOFCOURTESY           BIRTHDATE                HIREDATE            ADDRESS             CITY       REGION                POSTALCODE     COUNTRY

CREATE PROCEDURE QUES3DEL (@EID INT)
AS
BEGIN
    DELETE FROM EMPLOYEES WHERE EMPLOYEEID = @eid
IF @@ROWCOUNT = 0
BEGIN
   RAISERROR ('NO RECORDS TO DELETE',16,1)
END
END

EXEC QUES3DEL 10
EXEC QUES3DEL 11
--ALTER
CREATE PROCEDURE QUES3UPD (@EID INT,@LNAME VARCHAR(20), @FNAME VARCHAR(20), @TITILE VARCHAR(20), @TOC VARCHAR, @BDATE DATETIME, @HDATE DATETIME, @ADDR VARCHAR(30), @CITY VARCHAR(20), @REGION VARCHAR(20), @PCODE VARCHAR(30), @COUNTRY VARCHAR(30) )
AS
BEGIN
     UPDATE EMPLOYEES SET LASTNAME=@LNAME, FIRSTNAME=@FNAME, TITLE=@TITILE, TITLEOFCOURTESY=@TOC, BIRTHDATE=@BDATE, HIREDATE=@HDATE, ADDRESS=@ADDR, CITY=@CITY, REGION=@REGION, POSTALCODE=@PCODE, COUNTRY=@COUNTRY
     WHERE EMPLOYEEID = @EID
 IF @@ROWCOUNT = 0
 BEGIN
RAISERROR ('INVALID EMP ID',16,1)
END
END
--- INSERT
CREATE PROCEDURE QUES3INS(@LNAME VARCHAR(20), @FNAME VARCHAR(20), @TITILE VARCHAR(20), @TOC VARCHAR, @BDATE DATETIME, @HDATE DATETIME, @ADDR VARCHAR(30), @CITY VARCHAR(20), @REGION VARCHAR(20), @PCODE VARCHAR(30), @COUNTRY VARCHAR(30) )
AS
BEGIN
    INSERT INTO Employees (LASTNAME,FIRSTNAME,TITLE,TITLEOFCOURTESY,BIRTHDATE,HIREDATE,ADDRESS,CITY,REGION,POSTALCODE,COUNTRY)
	VALUES (@LNAME,@FNAME,@TITILE,@TOC,@BDATE,@HDATE,@ADDR,@CITY,@REGION,@PCODE,@COUNTRY)
	IF @@ROWCOUNT=0
	BEGIN
		RAISERROR ('INSERT FAILED',16,1)
	END
END
--EXEC QUES3INS 'GHADIYALI', 'HUSAIN','TRAINEE','TRAINEE','13-01-2000','25-07-2021','MUMBAI','BYCULLA','400033','INDIA'

--4.       TAKE REGIONDESCRIPTION AS A PARAMETER
--PRINT REGIONDESCRIPTION,  TERRITORY DESCRIPTION, AND EMPNAME

CREATE PROC TUESQUES4 (@REGIONDESCRIPTION VARCHAR(20)) AS
BEGIN
	SELECT R.RegionDescription, T.TerritoryDescription, EMP.FirstName + EMP.LastName AS EMPNAME  FROM Employees EMP LEFT JOIN EmployeeTerritories ET 
	ON ET.EmployeeID = EMP.EmployeeID JOIN Territories T 
	ON T.TerritoryID = ET.TerritoryID JOIN Region R
	ON R.RegionID = T.RegionID
	WHERE R.RegionDescription = @REGIONDESCRIPTION 
END
EXEC TUESQUES4 'WESTERN'
--5.       PRODUCTS TABLE
--WRITE A PROCEDURE WHICH CHECKS UNITSINSTOCK AND UNITSONORDER
--DISPLAY ALL PRODUCTS DETAILS (PRODUCTNAME, UNITPRICE, UNITSINSTOCK, UNITSONORDER, DIFFERENCE )  where UNITSONORDER is more then UNITSINSTOCK

CREATE PROCEDURE TUESQUES5 AS
BEGIN
	SELECT P.ProductName,P.UnitPrice,P.UnitsInStock,P.UnitsOnOrder, P.UnitsOnOrder - P.UnitsInStock AS DIFFERENCE FROM Products P WHERE UnitsOnOrder > UnitsInStock
END
EXEC TUESQUES5
--6.       ORDER DETAILS TABLE
--TAKE ORDERID AS PARAMETER
--FOR THE ORDERID PRINT PRODUCTNAME, UNITPRICE, QUANTITY, DISCOUNT, TOTAL I.E UNITPRICE * QUNATITY, DISCOUNTAMOUNT, FINAL PRICE I.E. TOTAL – DISCOUNT AMOUNT

CREATE PROC TUEQUES6 (@ORDERID INT) AS
BEGIN
	SELECT P.ProductName ,O.UnitPrice, O.Quantity,O.Discount,O.UnitPrice*O.Quantity AS TOTAL, (O.UnitPrice*O.Quantity) - O.Discount  
	FROM [Order Details] O JOIN Products P
	ON P.ProductID = O.ProductID
	WHERE OrderID = @ORDERID
END
EXEC TUEQUES6 10248
--7.       WRITE A PROCEDURE WHICH INSERT IN PRODUCTTABLE
--PARAMETER FOR PROCEDURE PRODUCTNAME, UNITPRICE AND CATEGORYNAME
--CHECK IF CATEGORYNAME EXIST THEN ADD PRODUCTS WITH EXISTING CATEGORYID
--IF CATEGORYNAME DOES NOT EXIST FIRST INSERT IN CATEGORY TABLE
--READ CATEGORYID WHICH IS IDENTITY FIELD
--AND INSERT NEW INSERTED ID IN PRODUCT TABLE AS CATEGORYID

SP_HELP [ORDER DETAILS]
CREATE PROC TUEQUES7 (@PRODUCTNAME VARCHAR(20), @UNITPRICE INT, @CATEGORYNAME VARCHAR(20)) AS
BEGIN
	DECLARE @CATEGORYID INT
	IF EXISTS (SELECT * FROM Categories WHERE CategoryName = @CATEGORYNAME) 
	BEGIN
		SELECT @CATEGORYID =  CATEGORYID FROM Categories WHERE CategoryName = @CATEGORYNAME
	END
	ELSE
	BEGIN
		INSERT INTO Categories(CategoryName) VALUES(@CATEGORYNAME)
		SELECT @CATEGORYID =  CATEGORYID FROM Categories WHERE CategoryName = @CATEGORYNAME
	END
	INSERT INTO Products (ProductName, UnitPrice, CategoryID) VALUES (@PRODUCTNAME, @UNITPRICE, @CATEGORYID)
END
EXEC TUEQUES7 'ALMOND', 200, 'DRY FRUITS'
SELECT * FROM Categories
SELECT * FROM Products
--8.       ORDERS TABLE
--TAKE YEAR AS PARAMETER TO PROCEDURE
--PRINT IN EACH QUARTER HOW MANY ORDERS BOOKED, 
--EXAMPLE IN Q-1 100
--                        Q-2 150 ….
--IF YEAR NOT EXIST PRINT ERROR MESSAGE

ALTER PROC TUEQUES8 (@YEAR INT) AS
BEGIN
	DECLARE @Q1 INT, @Q2 INT, @Q3 INT, @Q4 INT
	SELECT @Q1 = COUNT(ORDERID) FROM Orders WHERE YEAR(OrderDate) = @YEAR AND MONTH(OrderDate) <= 3
	SELECT @Q2 = COUNT(ORDERID) FROM Orders WHERE YEAR(OrderDate) = @YEAR AND MONTH(OrderDate) IN (4,5,6)
	SELECT @Q3 = COUNT(ORDERID) FROM Orders WHERE YEAR(OrderDate) = @YEAR AND MONTH(OrderDate) IN (7,8,9)
	SELECT @Q4 = COUNT(ORDERID) FROM Orders WHERE YEAR(OrderDate) = @YEAR AND MONTH(OrderDate) > 9
	PRINT 'Q1:'  + CAST(@Q1 AS VARCHAR)
	PRINT 'Q2:'  + CAST(@Q2 AS VARCHAR)
	PRINT 'Q3:'  + CAST(@Q3 AS VARCHAR)
	PRINT 'Q4:'  + CAST(@Q4 AS VARCHAR)
END
EXEC TUEQUES8 1997


--9.       TABLE ORDERS AND ORDER DETAILS – OUT PARAMETER
--TAKE YEAR AND MONTH AS PARAMETER AND RETURN
--TOTAL REVENUE GENERATED SUM(UNITPRICE * QTY – DISCOUNT)

ALTER PROCEDURE TUEQUES9 (@YEAR INT , @MONTH INT, @REVENUE INT OUT ) AS
BEGIN
	SELECT @REVENUE = SUM(( ROUND(O.UnitPrice * O.Quantity , 2)) - O.Discount) FROM [Order Details] O WHERE O.OrderID IN 
	(SELECT OrderID FROM ORDERS WHERE YEAR(ORDERDATE) = @YEAR AND MONTH(OrderDate) = @MONTH)
END

DECLARE @REVENUE INT
EXEC TUEQUES9 1996, 7, @REVENUE
PRINT @REVENUE

--10.   FOR EACH EMPLOYEE PRINT EMPLOYEE FULL NAME, BIRTHDATE, HIREDATE, AGE (IN YEARS) AT THE TIME OF HIRING, 
--RETIREMENT DATE. (60 YEARS)

ALTER PROC QUES10 AS
BEGIN
	SELECT E.FirstName + E.LastName AS FULLNAME,E.BirthDate, E.HireDate,
	DATEDIFF(YYYY, E.BIRTHDATE, E.HIREDATE) as [age at hiring], 
	DATEADD(YY, (60 - DATEDIFF(YYYY, E.BirthDate, GETDATE())), GETDATE()) AS [RETIREMENT DATE]
	FROM Employees E
END
EXEC QUES10